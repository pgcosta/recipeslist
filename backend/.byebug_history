q
chef_entry.id
chef_entry.fields
c
chef_entry.fields
chef_entry.nil? ? "" : chef_entry.fields[:name]
chef_entry.nil? ? chef_entry.fields[:name] : ""
unless chef_entry.nil? ? chef_entry.fields[:name] : "";
unless chef_entry.nil? ? chef_entry.fields[:name] : ""
chef_entry.nil?
chef_entry
c
chef_entry
c
chef_entry.fields
c
q
chef_entry.fields[:name]
chef_entry.fields
chef_entry
c
chef_entry
c
n
chef_entry
c
client.entries(content_type: 'recipe')
q
@mock_entries
@mock_fields
c
q
@mock_fields
@mock_entries
c
client.entries(3)
q
client.entries(3)
client.entries
client
q
client.asset(entry.fields[:photo].id).url(width: 300, height: 200, format: 'jpg', quality: 100)
n
entry.fields[:tags].map(&:fields)
n
entry.fields[:title]
entry
q
 do |e| p e end
entries
entry
q
Contentful::Entry.new('recipe')
entry
entry.fields
entry.fields[:title]
entry.fields[:photo]
client.asset(entry.fields[:photo].id).url(width: 300, height: 200, format: 'jpg', quality: 100)
entry.fields[:photo].id
entry.fields[:photo]
entry.fields[:photo].asset
client.asset('happycat').url(width: 300, height: 200, format: 'jpg', quality: 100)
entry.fields[:photo]
entry.fields[:title]
entry.fields[:photo].url
entry.fields[:photo]
entry.fields[:photo
entry.fields[:tags].map(&:fields)
entry.fields[:description]
entry.fields[:calories]
entry.fields[:title]
        entry.fields[:description]
        entry.fields[:calories]
entry.fields[:title]
        entry.fields[:description]
        entry.fields[:calories]
entry.fields[:tags].map &:fieldsentry.fields[:title]
        entry[:description]
        entry[:calories]
entry[:title]
entry.fields[:tags].map &:fields
entry.fields.keys
entry.fields
entry.fields[:tags].map &:fields
entry.fields[:tags]
entry.fields[:tags].last.fields
entry.fields[:tags].last
entry.fields[:tags]
entry.fields[:tags].all
entry.fields[:tags].count
entry.fields[:tags].size
entry.fields[:tags]
entry
entry.fields[:tags].fields
entry.fields[:tags]
entry.fields
entry.fields["tags"]
entry.fields["tags"]"
entry.fields.to_json
entry.to_json
entry.fields
entry.photo.url
entry.photo.resolve(client)
entry.photo
entry.fields
entry.image
entry.imagr
entry=entries.first
entry
entries.first
entries
l=
entries.last
entries=client.entries(content_type: 'recipe')
entries=client.content_type 'recipe'
client.content_type 'recipe'
client.content_type 'Recipe'
client.content_type 'Recipes'
client.content_type 'recipes'
client = ::Contentful::Management::Client.new('7ac531648a1b5e1dab6c18b0979f822a5aad0fe5f1109829b8a197eb2be4b84c')
client = Contentful::Management::Client.new('7ac531648a1b5e1dab6c18b0979f822a5aad0fe5f1109829b8a197eb2be4b84c')
environment = client.environments('kk2bw5ojx476')
environment = client.environments('kk2bw5ojx476').find('master')
environment = client.environments('kk2bw5ojx476').find('master)
entries.content_type
entries.content_types
entries
l=
events
environment = client.environment
l=
entry.country
entries.first
entry
entry.locales
entry.title
entry.url
entry.rich["content"].last
entry.rich["content"].keys
entry.rich["content"]
entry.rich.content
entry.rich.keys
entry.rich
entry.slug
entry.brand
entry.fields.keys.sort
entry.fields.last
entry.fields
entry=entries.first
entries.first
entries = client.entries
cliententries = client.entrie
c
DataAccess::ProductsDB.update_product_stock(product_name)
n
q
DataAccess::ProductsDB.update_product_stock(product_name)
n
c
q
DataAccess::ProductsDB.update_product_stock(product_name)
n
Tools::ChangeMaker.new(change.to_i, total_coin_stock).give_change
c
Tools::ChangeMaker.new(change.to_i, total_coin_stock).give_change
n
q
y
q
e.message
e=Tools::ChangeMaker.new(change.to_i, total_coin_stock).give_change
Tools::ChangeMaker.new(change.to_i, total_coin_stock).give_change
q
change
Tools::ChangeMaker.new(change, total_coin_stock).give_change
q
Tools::ChangeMaker.new(total,total_coin_stock).give_change
total=(json["total"] * 100).to_i
(json["total"] * 100).to_i
(json["total"] * 100).to_1
json["total"] * 100
json["total"]
total_coin_stock
Tools::ChangeMaker.new(json["total"], total_coin_stock).give_change
require './lib/tools/change_maker'
Tools::ChangeMaker.new(json["total"], total_coin_stock).give_change
total_coin_stock
database_coin_stock
q
json = JSON.parse(request.body.read)
q
c
r=request.body.read
continue
q
   44:   }
   43:     "totalCount" => products.count
=> 42:     "data" => products,
{
products
q
DataAccess::ProductsDB.get_all_products
products
c
q
results.each do |row| puts row['name'] end
c
results.each do |row| puts row['name'] end
return_array.to_a
results = Mysql.client.query(query)
query = "SELECT name, price, stock FROM products"
return_array
return_array.to_a
q
results.each do |row| puts row['name'] end
results
results.all
results = Mysql.client.query(query)
results.each do |row| puts row end
results = Mysql.client.query(query)
results.each do |row| puts row end
results.all
results = Mysql.client.query(query)
query = "SELECT name, price, stock FROM products"
results
continue
q
self.total_change
total_change
selected_coin
s
total_change
try_coin(COINS_MAP[selected_coin])
COINS_MAP[selected_coin]
n
coins_stock[COINS_MAP[selected_coin]]
c
coins_stock[COINS_MAP[selected_coin]]
l=
c
coins_stock
try_coin(total_change, SELECTED_COIN[selected_coin])
SELECTED_COIN[selected_coin]
total_change
l=
continue
